// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.17;

import {IThemeRenderer} from "../IThemeRenderer.sol";

/// @author sammybauch.eth
/// @title  Speedtracer Ringers Theme
/// @notice Colors, font and names for Ringers themed Speedtracer tracks
contract RingersThemeRenderer is IThemeRenderer {
    bytes16 private constant SYMBOLS = "0123456789ABCDEF";

    uint24 public constant BACKGROUND_COLOR = 0xf5f5f5;
    uint24 public constant KERB_COLOR = 0xf3c845;
    uint24 public constant ROAD_COLOR = 0x2b2b2b;
    uint24 public constant MIDLINE_COLOR = 0xf3c845; // red: 0xB54B45;

    // Baumans
    string public constant FONT =
        "url(data:font/woff2;base64,) format('woff2')";

    string[] private names =
        ["Ringers Raceway", "Goose Park", "Cherniak Circuit", "Peg Loop"];

    function themeName() external pure returns (string memory) {
        return "Ringers";
    }

    function name(uint256 tokenId) external view returns (string memory) {
        uint256 index = tokenId % names.length;
        return names[index];
    }

    function background() external pure returns (string memory) {
        return string(
            abi.encodePacked(
                "<rect id='bg' width='100%' height='100%' fill='#",
                toHexString(BACKGROUND_COLOR),
                "' />"
            )
        );
    }

    function road() external pure returns (string memory) {
        return toHexString(ROAD_COLOR);
    }

    function kerb() external pure returns (string memory) {
        return toHexString(KERB_COLOR);
    }

    function midline() external pure returns (string memory) {
        return toHexString(MIDLINE_COLOR);
    }

    function font() external pure returns (string memory) {
        return FONT;
    }

    function toHexString(uint256 value) internal pure returns (string memory) {
        bytes memory buffer = new bytes(6);
        for (uint256 i = 0; i < 6; ++i) {
            buffer[5 - i] = SYMBOLS[value & 0xF];
            value >>= 4;
        }
        return string(buffer);
    }

    function filter(uint256) external pure returns (string memory) {
        return
        '<filter id="noise"><feComponentTransfer><feFuncR type="identity" /><feFuncG type="identity" /><feFuncB type="identity" /><feFuncA type="identity" /></feComponentTransfer></filter><filter id="tf" x="-20%" y="-20%" width="140%" height="140%"><feGaussianBlur stdDeviation="2 2" result="shadow"/><feOffset dx="2" dy="2"/></filter>';
    }
}
